---
services:
  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
    networks:
      - wg0
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    ports:
      - 7878:7878 # radarr
      - 8096:8096 # jellyfin
      - 8686:8686 # lidarr
      - 8787:8787 # readarr
      - 8989:8989 # sonarr
      - 9091:9091 # transmission
      - 9696:9696 # prowlar
      # - 8388:8388/tcp # Shadowsocks
      # - 8388:8388/udp # Shadowsocks
      # - 8888:8888/tcp # HTTP proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
    volumes:
      - /appdata/wireguard/config:/config
    restart: unless-stopped

    # ports:
    #   - 9091:9091
    #   - 51413:51413
    #   - 51413:51413/udp
    # .env:
    #   - TRANSMISSION_USER
    #   - TRANSMISSION_PASSWORD
  transmission:
    image: linuxserver/transmission
    container_name: transmission
    network_mode: "service:wireguard"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
    volumes:
      - /appdata/transmission:/config
      - /data:/data
    restart: unless-stopped

  # ports:
  #   - 9696:9696
  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr
    network_mode: "service:wireguard"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Amsterdam
    volumes:
      - /appdata/prowlarr:/config
    restart: unless-stopped

  # ports:
  #   - "8989:8989"
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr
    network_mode: "service:wireguard"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Amsterdam
    volumes:
      - /appdata/sonarr:/config
      - /data:/data
    restart: unless-stopped

  # ports:
  #   - "7878:7878"
  radarr:
    container_name: radarr
    image: linuxserver/radarr
    network_mode: "service:wireguard"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Etc/UTC
    volumes:
      - /appdata/radarr:/config
      - /data:/data
    restart: unless-stopped

  # ports:
  #   - "8787:8787"
  readarr:
    container_name: readarr
    image: linuxserver/readarr:develop
    network_mode: "service:wireguard"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Amsterdam
    volumes:
      - /appdata/readarr:/config
      - /data:/data
    restart: unless-stopped

  # ports:
  #   - "8686:8686"
  lidarr:
    container_name: lidarr
    image: linuxserver/lidarr
    network_mode: "service:wireguard"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Amsterdam
    volumes:
      - /appdata/lidarr:/config
      - /data:/data
    restart: unless-stopped

  #  ports:
  #    - "8096:8096"
  jellyfin:
    container_name: jellyfin
    image: linuxserver/jellyfin
    network_mode: "service:wireguard"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Amsterdam
    volumes:
      - /appdata/jellyfin:/config
      - /data:/data
    restart: unless-stopped

  homarr:
    container_name: homarr
    image: homarr/homarr
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration
      - /appdata/homarr/configs:/app/data/configs
      - /appdata/homarr/icons:/app/public/icons
      - /appdata/homarr/data:/data
    ports:
      - '7575:7575'
    restart: unless-stopped

networks:
  wg0:
    name: wg0
    driver: bridge
